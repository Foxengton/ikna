server {
  listen 80;
  listen [::]:80;
  server_name localhost;
  root /var/www/html/public;
  autoindex off;
  index index.html;

  # Disable MIME sniffing
  add_header X-Content-Type-Options 'nosniff' always;

  # Force www.site.com => site.com
  if ($host ~* ^www\.(.+)$) {
    return 301 $scheme://$1$request_uri;
  }

  # Disable access to hidden files/folders
  location ~* /\.(?!well-known/) {
    deny all;
    log_not_found off;
    access_log off;
  }

  # Disable access to backup/config/command/log files
  location ~* (?:\.(?:bak|co?nf(ig)?|in[ci]|log|sh|sql|tar|t?gz)|~)$ {
    deny all;
  }

  location ~* ^.+\.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|svgz?|ttf|ttc|otf|eot|woff2?)$ {
    expires 1d;
    access_log off;
  }

  location / {
    root /var/www/html/public;
    autoindex off;
    index index.html;

    try_files $uri $uri/ /index.html?$query_string;
  }

  location /api {
    proxy_pass http://backend:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Настройки CORS
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'POST,PUT,GET,OPTIONS,PATCH,DELETE';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
  }
}